
<div class="container py-5 page {{template|handleize}}" id="page-content-{{page.handle}}">
  <div class="row pt-5">
    <div class="col-12">
      <div class="row">
        <div class="col-12">
          <h1 class="page-title">{{ page.title }}
          </h1>
          <div class="rte">{{ page.content }}</div>
          <div class="content">
            <bs4-contents class="d-block d-lg-none top-contents" header-parent-selector="#main-container" headers-start="2" headers-depth="4" scroll-offset="80"></bs4-contents>
            <section class="my-5"><h1>Extras Module</h1>
<h2>Install</h2>
<pre><code class="language-bash">npm install --save @ribajs/extras
</code></pre>
<h2>Regist</h2>
<p>To regist the module include <code>import extrasModule from '@ribajs/extras';</code> in your <code>main.ts</code> file and regist the module with <code>riba.module.regist(extrasModule);</code>:</p>
<pre><code class="language-ts">import { Riba, coreModule, Utils } from '@ribajs/core';
import { JQuery, extrasModule } from '@ribajs/extras';
const riba = new Riba();
const model = {};
riba.module.regist(coreModule);
riba.module.regist(extrasModule);
Utils.domIsReady(() =&gt; {
  riba.bind(document.body, model);
});
</code></pre>

            </section>
            <section class="my-5">
              <h2 id="binders">Binders</h2>
              <section class="my-5">
                <h3 id="data-scroll-position-y">data-scroll-position-y</h3><p>Sets the scroll position (<code>&quot;top&quot;</code>, <code>&quot;scrolled&quot;</code>, <code>&quot;bottom&quot;</code>) to the element as a data attribute, useful if you want to define styles depending on the scroll position.</p>
<p>Options can be passed via data attributes, e.g <code>data-placement=&quot;right&quot;</code></p>
<table>
<thead>
<tr>
<th>Name</th>
<th>Default</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>data-offset-top</code></td>
<td><code>10</code></td>
<td>Top offset, the scroll position is <code>&quot;top&quot;</code> as long as the scroll position is smaller than the top offset or 0</td>
</tr>
<tr>
<td><code>data-offset-bottom</code></td>
<td><code>10</code></td>
<td>Bottom offset, the scroll position is <code>&quot;bottom&quot;</code> as long as the scroll position is on the end or just before according to the offset</td>
</tr>
</tbody>
</table>
<p>The binders value is a selector to the element you want to watch the scroll event for</p>
<table>
<thead>
<tr>
<th>Default</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>'window'</code></td>
<td>Can be <code>'window'</code> for the Window object, <code>'this'</code> for the current element or any selector like <code>'#page-wrapper'</code></td>
</tr>
</tbody>
</table>
<p>An example style could be look like this</p>
<pre><code class="language-scss">body:not([[data-scroll-position-y='top']) {
  padding-top: 3em;
}
</code></pre>
<rv-bind-content class="pt-3">
  <template>
    <rv-example-tabs class="pt-3" handle="data-scroll-position-y-binder">
      <template type="single-html-file">
        <div class="scrollbar-y-auto" rv-data-scroll-position-y="'this'">
          <p><strong>The Background color changes depending on the scroll position top, scrolled or bottom to red, yellow or blue.</strong></p>
          <rv-lorem-ipsum generate-paragraphs="5"></rv-lorem-ipsum>
        </div>
      </template>
    </rv-example-tabs>
  </template>
</rv-bind-content>

              </section>
            </section>
            <bs4-scrollspy class="d-none d-lg-block py-3 side-scrollspy scrollbar-primary-on-hover scrollbar-y-auto" header-parent-selector="#main-container" headers-start="2" headers-depth="4" offset="200" offset-bottom="80" scroll-offset="80"></bs4-scrollspy>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>